var N=null,E="",T="t",U="u",searchIndex={};
var R=["equipement","carackind","charactererror","result","condition","dofus_stuff","effect","ankama_id","img_url","element","dofus_stuff::dofapi","is_stronger_than","conditionatom","character","dofus_stuff::character","to_owned","clone_into","try_from","try_into","borrow_mut","type_id","borrow","typeid","itemtype","hashmap","rangeinclusive","formatter","deserialize","caraclines","Character","CharacterError","RawCaracsValue","ItemSlot","RawCaracs","SpellEffects","Equipement","CaracKind","ConditionAtom","ItemType","CaracLines","Condition"];

searchIndex["dofus_stuff"]={"doc":E,"i":[[0,R[13],R[5],E,N,N],[3,R[32],R[14],E,N,N],[3,R[29],E,E,N,N],[12,"item_slots",E,E,0,N],[12,"base_stats",E,E,0,N],[12,"unspent",E,E,0,N],[3,R[33],E,E,N,N],[4,R[30],E,E,N,N],[13,"NotEnoughPoints",E,E,1,N],[13,"NotEnoughCaracs",E,E,1,N],[4,R[31],E,"Enumeration of values that can be computed from a…",N,N],[13,"Carac",E,E,2,N],[13,"PowStats",E,E,2,N],[13,"MeanExtraDamage",E,E,2,N],[13,"MeanDamage",E,E,2,N],[13,"PerResVariance",E,E,2,N],[13,"Resiliance",E,E,2,N],[11,"new",E,E,3,[[],["self"]]],[11,"equip",E,E,3,[[["self"],[R[0]]]]],[11,"get_allowed",E,E,3,[[["self"]]]],[11,"get_item",E,E,3,[[["self"]],[["option",[R[0]]],[R[0]]]]],[11,"new",E,E,0,[[[R[24]],["u8"]],["self"]]],[11,"iter_items",E,"Iterator over items currently equiped.",0,[[["self"]]]],[11,"get_caracs",E,E,0,[[["self"]],["rawcaracs"]]],[11,"iter_set_synergies",E,E,0,[[["self"]]]],[11,"carac_cost_from_zero",E,"Compute the number of points to spend to reach a value for…",0,[[["u16"],[R[1]]],["u16"]]],[11,"carac_spend_cost",E,"Compute the number of points to spend to increase a…",0,[[["self"],[R[1]],["u16"]],["u16"]]],[11,"carac_unspend_recover",E,"Compute the number of points recovered by decreasing a…",0,[[["self"],["u16"],[R[1]]],[["u16"],[R[2]],[R[3],["u16",R[2]]]]]],[11,"carac_spend",E,"Try to spend points to increase characteristic.",0,[[["self"],["u16"],[R[1]]],[[R[2]],[R[3],[R[2]]]]]],[11,"carac_unspend",E,"Try to recover points by decreasing a characteristic.",0,[[["self"],["u16"],[R[1]]],[[R[2]],[R[3],[R[2]]]]]],[11,"carac_spend_or_seek",E,"Try to spend points to increase a characteristic, if there…",0,[[["self"],[R[1]],["u16"]],[[R[2]],[R[3],[R[2]]]]]],[11,"all_conditions",E,"Return a condition equivalent to the union of all item's…",0,[[["self"]],[R[4]]]],[11,"condition_overflow",E,"Compute an approximate smithmage weight value required to…",0,[[["self"],[R[4]]],["f64"]]],[11,"count_item_conflicts",E,E,0,[[["self"]],["u8"]]],[11,"get_base_carac",E,E,4,[[["self"],[R[1]]],["i16"]]],[11,"get_carac",E,E,4,[[["self"],[R[1]]],["i16"]]],[11,"eval",E,E,4,[[["self"],["rawcaracsvalue"]],["f64"]]],[11,"mean_per_resistance",E,E,4,[[["self"]],["f64"]]],[11,"resiliance",E,E,4,[[["self"]],["f64"]]],[11,"mean_extra_damage",E,E,4,[[["self"],[R[9]]],["f64"]]],[11,"mean_effect_damage",E,E,4,[[["self"],[R[6]],["bool"]],["f64"]]],[11,"mean_weapon_damage",E,E,4,[[["self"],["spelleffects"]],["f64"]]],[11,"approx_smithmage_weight",E,E,2,[[["self"]],[[R[3],["f64"]],["f64"]]]],[11,"is_decreasing",E,E,2,[[["self"]],["bool"]]],[0,"dofapi",R[5],E,N,N],[3,R[39],R[10],E,N,N],[3,R[40],E,"A clause of atoms, i.e. written in the form (atom1 or…",N,N],[3,R[34],E,E,N,N],[12,R[6],E,E,5,N],[12,"ranged",E,E,5,N],[12,"weapon",E,E,5,N],[12,"critical",E,E,5,N],[12,"critical_effect",E,E,5,N],[3,R[35],E,E,N,N],[12,"item_type",E,E,6,N],[12,R[7],E,E,6,N],[12,"_id",E,E,6,N],[12,"name",E,E,6,N],[12,"level",E,E,6,N],[12,"url",E,E,6,N],[12,"set_id",E,E,6,N],[12,"description",E,E,6,N],[12,R[8],E,E,6,N],[12,"statistics",E,E,6,N],[12,"conditions",E,E,6,N],[3,"Set",E,E,N,N],[12,R[7],E,E,7,N],[12,R[8],E,E,7,N],[12,"_id",E,E,7,N],[12,"name",E,E,7,N],[12,"level",E,E,7,N],[12,"url",E,E,7,N],[12,"equipement_id",E,E,7,N],[12,"weapon_id",E,E,7,N],[12,"bonus",E,E,7,N],[4,R[36],E,E,N,N],[13,"AP",E,E,8,N],[13,"APReduction",E,E,8,N],[13,"APResistance",E,E,8,N],[13,"Critical",E,E,8,N],[13,"CriticalDamage",E,E,8,N],[13,"CriticalResistance",E,E,8,N],[13,"Damage",E,E,8,N],[13,"Dodge",E,E,8,N],[13,"Heals",E,E,8,N],[13,"Initiative",E,E,8,N],[13,"Lock",E,E,8,N],[13,"MP",E,E,8,N],[13,"MPReduction",E,E,8,N],[13,"MPResistance",E,E,8,N],[13,"PerMeleeDamage",E,E,8,N],[13,"PerMeleeResistance",E,E,8,N],[13,"PerRangedDamage",E,E,8,N],[13,"PerRangedResistance",E,E,8,N],[13,"PerResistance",E,E,8,N],[13,"PerSpellDamage",E,E,8,N],[13,"PerWeaponDamage",E,E,8,N],[13,"Pods",E,E,8,N],[13,"Power",E,E,8,N],[13,"Prospecting",E,E,8,N],[13,"PushbackDamage",E,E,8,N],[13,"PushbackResistance",E,E,8,N],[13,"Range",E,E,8,N],[13,"RawDamage",E,E,8,N],[13,"ReflectDamage",E,E,8,N],[13,"Resistance",E,E,8,N],[13,"Special",E,E,8,N],[13,"Stats",E,E,8,N],[13,"Summons",E,E,8,N],[13,"TrapDamage",E,E,8,N],[13,"TrapPower",E,E,8,N],[13,"Vitality",E,E,8,N],[13,"Wisdom",E,E,8,N],[4,R[37],E,E,N,N],[13,"Other",E,E,9,N],[13,"Stats",E,E,9,N],[13,"RestrictSetBonuses",E,E,9,N],[4,"Effect",E,E,N,N],[13,"Hit",E,E,10,N],[12,R[9],"dofus_stuff::dofapi::Effect",E,10,N],[12,"bounds",E,E,10,N],[12,"lifesteal",E,E,10,N],[4,"Element",R[10],E,N,N],[13,"Earth",E,E,11,N],[13,"Water",E,E,11,N],[13,"Air",E,E,11,N],[13,"Fire",E,E,11,N],[13,"Neutral",E,E,11,N],[4,R[38],E,E,N,N],[13,"Amulet",E,E,12,N],[13,"Backpack",E,E,12,N],[13,"Belt",E,E,12,N],[13,"Boots",E,E,12,N],[13,"Cloak",E,E,12,N],[13,"Dofus",E,E,12,N],[13,"Hat",E,E,12,N],[13,"Ring",E,E,12,N],[13,"Shield",E,E,12,N],[13,"Trophy",E,E,12,N],[13,"Petsmount",E,E,12,N],[13,"Pet",E,E,12,N],[13,"LivingObject",E,E,12,N],[13,"Mount",E,E,12,N],[13,"Axe",E,E,12,N],[13,"Sword",E,E,12,N],[13,"Staff",E,E,12,N],[13,"Wand",E,E,12,N],[13,"Bow",E,E,12,N],[13,"Dagger",E,E,12,N],[13,"Shovel",E,E,12,N],[13,"Hammer",E,E,12,N],[13,"Scythe",E,E,12,N],[13,"Pickaxe",E,E,12,N],[13,"Tool",E,E,12,N],[13,"SoulStone",E,E,12,N],[5,"fix_all_trophy",E,"Fix trophy conditions as big trophy are not referenced…",N,[[]]],[11,"smithmage_weight",E,E,8,[[["self"]],[[R[3],["f64"]],["f64"]]]],[11,"as_map",E,"Use the carac lines as a map",13,[[["self"]],[R[24]]]],[11,R[11],E,"Check if this item's statistics are greater than or equal…",13,[[["self"]],["bool"]]],[11,R[11],E,E,9,[[["self"],[R[12]]],["bool"]]],[11,"new",E,E,14,[[],["self"]]],[11,"clauses",E,"Get clauses (the list of disjunction of a big `and`…",14,[[["self"]],["vec"]]],[11,"into_clauses",E,"Move into clauses (the list of disjunction of a big `and`…",14,[[],[["vec",[R[12]]],["vec",["vec"]]]]],[11,"and",E,"Build a clause which is true if and only if both `cond1`…",14,[[],["self"]]],[11,"effective_stat",E,"Return the element that boosts the damages applied in this…",11,[[["self"]],[R[9]]]],[11,"is_weapon",E,"Check wether this equipement is a weapon",6,[[["self"]],["bool"]]],[0,"search",R[5],E,N,N],[5,"eval_character","dofus_stuff::search",E,N,[[[R[13]]],["f64"]]],[5,"optimize_character",E,E,N,[[["u64"],[R[13]]],[[R[13]],["vec",[R[13]]]]]],[11,R[15],R[14],E,3,[[["self"]],[T]]],[11,R[16],E,E,3,[[["self"],[T]]]],[11,"into",E,E,3,[[],[U]]],[11,"from",E,E,3,[[[T]],[T]]],[11,R[17],E,E,3,[[[U]],[R[3]]]],[11,R[18],E,E,3,[[],[R[3]]]],[11,R[19],E,E,3,[[["self"]],[T]]],[11,R[21],E,E,3,[[["self"]],[T]]],[11,R[20],E,E,3,[[["self"]],[R[22]]]],[11,"vzip",E,E,3,[[],["v"]]],[11,R[15],E,E,0,[[["self"]],[T]]],[11,R[16],E,E,0,[[["self"],[T]]]],[11,"into",E,E,0,[[],[U]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[17],E,E,0,[[[U]],[R[3]]]],[11,R[18],E,E,0,[[],[R[3]]]],[11,R[19],E,E,0,[[["self"]],[T]]],[11,R[21],E,E,0,[[["self"]],[T]]],[11,R[20],E,E,0,[[["self"]],[R[22]]]],[11,"vzip",E,E,0,[[],["v"]]],[11,"into",E,E,4,[[],[U]]],[11,"from",E,E,4,[[[T]],[T]]],[11,R[17],E,E,4,[[[U]],[R[3]]]],[11,R[18],E,E,4,[[],[R[3]]]],[11,R[19],E,E,4,[[["self"]],[T]]],[11,R[21],E,E,4,[[["self"]],[T]]],[11,R[20],E,E,4,[[["self"]],[R[22]]]],[11,"vzip",E,E,4,[[],["v"]]],[11,"into",E,E,1,[[],[U]]],[11,"from",E,E,1,[[[T]],[T]]],[11,R[17],E,E,1,[[[U]],[R[3]]]],[11,R[18],E,E,1,[[],[R[3]]]],[11,R[19],E,E,1,[[["self"]],[T]]],[11,R[21],E,E,1,[[["self"]],[T]]],[11,R[20],E,E,1,[[["self"]],[R[22]]]],[11,"vzip",E,E,1,[[],["v"]]],[11,"into",E,E,2,[[],[U]]],[11,"from",E,E,2,[[[T]],[T]]],[11,R[17],E,E,2,[[[U]],[R[3]]]],[11,R[18],E,E,2,[[],[R[3]]]],[11,R[19],E,E,2,[[["self"]],[T]]],[11,R[21],E,E,2,[[["self"]],[T]]],[11,R[20],E,E,2,[[["self"]],[R[22]]]],[11,"vzip",E,E,2,[[],["v"]]],[11,R[15],R[10],E,13,[[["self"]],[T]]],[11,R[16],E,E,13,[[["self"],[T]]]],[11,"into",E,E,13,[[],[U]]],[11,"from",E,E,13,[[[T]],[T]]],[11,R[17],E,E,13,[[[U]],[R[3]]]],[11,R[18],E,E,13,[[],[R[3]]]],[11,R[19],E,E,13,[[["self"]],[T]]],[11,R[21],E,E,13,[[["self"]],[T]]],[11,R[20],E,E,13,[[["self"]],[R[22]]]],[11,"vzip",E,E,13,[[],["v"]]],[11,R[15],E,E,14,[[["self"]],[T]]],[11,R[16],E,E,14,[[["self"],[T]]]],[11,"into",E,E,14,[[],[U]]],[11,"from",E,E,14,[[[T]],[T]]],[11,R[17],E,E,14,[[[U]],[R[3]]]],[11,R[18],E,E,14,[[],[R[3]]]],[11,R[19],E,E,14,[[["self"]],[T]]],[11,R[21],E,E,14,[[["self"]],[T]]],[11,R[20],E,E,14,[[["self"]],[R[22]]]],[11,"vzip",E,E,14,[[],["v"]]],[11,"into",E,E,5,[[],[U]]],[11,"from",E,E,5,[[[T]],[T]]],[11,R[17],E,E,5,[[[U]],[R[3]]]],[11,R[18],E,E,5,[[],[R[3]]]],[11,R[19],E,E,5,[[["self"]],[T]]],[11,R[21],E,E,5,[[["self"]],[T]]],[11,R[20],E,E,5,[[["self"]],[R[22]]]],[11,"vzip",E,E,5,[[],["v"]]],[11,R[15],E,E,6,[[["self"]],[T]]],[11,R[16],E,E,6,[[["self"],[T]]]],[11,"into",E,E,6,[[],[U]]],[11,"from",E,E,6,[[[T]],[T]]],[11,R[17],E,E,6,[[[U]],[R[3]]]],[11,R[18],E,E,6,[[],[R[3]]]],[11,R[19],E,E,6,[[["self"]],[T]]],[11,R[21],E,E,6,[[["self"]],[T]]],[11,R[20],E,E,6,[[["self"]],[R[22]]]],[11,"vzip",E,E,6,[[],["v"]]],[11,"into",E,E,7,[[],[U]]],[11,"from",E,E,7,[[[T]],[T]]],[11,R[17],E,E,7,[[[U]],[R[3]]]],[11,R[18],E,E,7,[[],[R[3]]]],[11,R[19],E,E,7,[[["self"]],[T]]],[11,R[21],E,E,7,[[["self"]],[T]]],[11,R[20],E,E,7,[[["self"]],[R[22]]]],[11,"vzip",E,E,7,[[],["v"]]],[11,R[15],E,E,8,[[["self"]],[T]]],[11,R[16],E,E,8,[[["self"],[T]]]],[11,"into",E,E,8,[[],[U]]],[11,"from",E,E,8,[[[T]],[T]]],[11,"to_string",E,E,8,[[["self"]],["string"]]],[11,R[17],E,E,8,[[[U]],[R[3]]]],[11,R[18],E,E,8,[[],[R[3]]]],[11,R[19],E,E,8,[[["self"]],[T]]],[11,R[21],E,E,8,[[["self"]],[T]]],[11,R[20],E,E,8,[[["self"]],[R[22]]]],[11,"vzip",E,E,8,[[],["v"]]],[11,R[15],E,E,9,[[["self"]],[T]]],[11,R[16],E,E,9,[[["self"],[T]]]],[11,"into",E,E,9,[[],[U]]],[11,"from",E,E,9,[[[T]],[T]]],[11,R[17],E,E,9,[[[U]],[R[3]]]],[11,R[18],E,E,9,[[],[R[3]]]],[11,R[19],E,E,9,[[["self"]],[T]]],[11,R[21],E,E,9,[[["self"]],[T]]],[11,R[20],E,E,9,[[["self"]],[R[22]]]],[11,"vzip",E,E,9,[[],["v"]]],[11,"into",E,E,10,[[],[U]]],[11,"from",E,E,10,[[[T]],[T]]],[11,R[17],E,E,10,[[[U]],[R[3]]]],[11,R[18],E,E,10,[[],[R[3]]]],[11,R[19],E,E,10,[[["self"]],[T]]],[11,R[21],E,E,10,[[["self"]],[T]]],[11,R[20],E,E,10,[[["self"]],[R[22]]]],[11,"vzip",E,E,10,[[],["v"]]],[11,R[15],E,E,11,[[["self"]],[T]]],[11,R[16],E,E,11,[[["self"],[T]]]],[11,"into",E,E,11,[[],[U]]],[11,"from",E,E,11,[[[T]],[T]]],[11,R[17],E,E,11,[[[U]],[R[3]]]],[11,R[18],E,E,11,[[],[R[3]]]],[11,R[19],E,E,11,[[["self"]],[T]]],[11,R[21],E,E,11,[[["self"]],[T]]],[11,R[20],E,E,11,[[["self"]],[R[22]]]],[11,"vzip",E,E,11,[[],["v"]]],[11,R[15],E,E,12,[[["self"]],[T]]],[11,R[16],E,E,12,[[["self"],[T]]]],[11,"into",E,E,12,[[],[U]]],[11,"from",E,E,12,[[[T]],[T]]],[11,R[17],E,E,12,[[[U]],[R[3]]]],[11,R[18],E,E,12,[[],[R[3]]]],[11,R[19],E,E,12,[[["self"]],[T]]],[11,R[21],E,E,12,[[["self"]],[T]]],[11,R[20],E,E,12,[[["self"]],[R[22]]]],[11,"vzip",E,E,12,[[],["v"]]],[11,"default",E,E,13,[[],["self"]]],[11,"default",E,E,14,[[],[R[4]]]],[11,"clone",R[14],E,3,[[["self"]],["itemslot"]]],[11,"clone",E,E,0,[[["self"]],[R[13]]]],[11,"clone",R[10],E,8,[[["self"]],[R[1]]]],[11,"clone",E,E,13,[[["self"]],[R[28]]]],[11,"clone",E,E,9,[[["self"]],[R[12]]]],[11,"clone",E,E,14,[[["self"]],[R[4]]]],[11,"clone",E,E,11,[[["self"]],[R[9]]]],[11,"clone",E,E,12,[[["self"]],[R[23]]]],[11,"clone",E,E,6,[[["self"]],[R[0]]]],[11,"eq",R[14],E,1,[[["self"],[R[2]]],["bool"]]],[11,"ne",E,E,1,[[["self"],[R[2]]],["bool"]]],[11,"eq",R[10],E,8,[[["self"],[R[1]]],["bool"]]],[11,"ne",E,E,8,[[["self"],[R[1]]],["bool"]]],[11,"eq",E,E,11,[[["self"],[R[9]]],["bool"]]],[11,"eq",E,E,12,[[["self"],[R[23]]],["bool"]]],[11,"from",E,E,8,[[["str"]],["self"]]],[11,"from",E,E,13,[[[R[24],[R[1],R[25]]],[R[25],["i16"]],[R[1]]],["self"]]],[11,"from",E,E,9,[[["str"]],["self"]]],[11,"from",E,E,14,[[[R[12]]],["self"]]],[11,"hash",E,E,8,[[["self"],["__h"]]]],[11,"hash",E,E,11,[[["self"],["__h"]]]],[11,"hash",E,E,12,[[["self"],["__h"]]]],[11,"fmt",R[14],E,3,[[["self"],[R[26]]],[R[3]]]],[11,"fmt",E,E,1,[[["self"],[R[26]]],[R[3]]]],[11,"fmt",E,E,0,[[["self"],[R[26]]],[R[3]]]],[11,"fmt",E,E,2,[[["self"],[R[26]]],[R[3]]]],[11,"fmt",R[10],E,8,[[["self"],[R[26]]],[R[3]]]],[11,"fmt",E,E,13,[[["self"],[R[26]]],[R[3]]]],[11,"fmt",E,E,9,[[["self"],[R[26]]],[R[3]]]],[11,"fmt",E,E,14,[[["self"],[R[26]]],[R[3]]]],[11,"fmt",E,E,11,[[["self"],[R[26]]],[R[3]]]],[11,"fmt",E,E,10,[[["self"],[R[26]]],[R[3]]]],[11,"fmt",E,E,5,[[["self"],[R[26]]],[R[3]]]],[11,"fmt",E,E,12,[[["self"],[R[26]]],[R[3]]]],[11,"fmt",E,E,6,[[["self"],[R[26]]],[R[3]]]],[11,"fmt",E,E,7,[[["self"],[R[26]]],[R[3]]]],[11,"fmt",E,E,8,[[["self"],[R[26]]],[R[3]]]],[11,R[27],R[14],E,2,[[["__d"]],[R[3]]]],[11,R[27],R[10],E,8,[[["d"]],[[R[3],[R[1]]],[R[1]]]]],[11,R[27],E,E,13,[[["d"]],[[R[3],[R[28]]],[R[28]]]]],[11,R[27],E,E,14,[[["d"]],[[R[4]],[R[3],[R[4]]]]]],[11,R[27],E,E,11,[[["__d"]],[R[3]]]],[11,R[27],E,E,10,[[["__d"]],[R[3]]]],[11,R[27],E,E,5,[[["__d"]],[R[3]]]],[11,R[27],E,E,12,[[["__d"]],[R[3]]]],[11,R[27],E,E,6,[[["__d"]],[R[3]]]],[11,R[27],E,E,7,[[["__d"]],[R[3]]]]],"p":[[3,R[29]],[4,R[30]],[4,R[31]],[3,R[32]],[3,R[33]],[3,R[34]],[3,R[35]],[3,"Set"],[4,R[36]],[4,R[37]],[4,"Effect"],[4,"Element"],[4,R[38]],[3,R[39]],[3,R[40]]]};
initSearch(searchIndex);addSearchOptions(searchIndex);